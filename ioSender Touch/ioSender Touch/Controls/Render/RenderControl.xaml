<UserControl x:Class="ioSenderTouch.Controls.Render.RenderControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:render="clr-namespace:ioSenderTouch.Controls.Render"
             xmlns:controls="clr-namespace:ioSenderTouch.Controls"
             xmlns:viewModels="clr-namespace:ioSenderTouch.ViewModels"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance Type=viewModels:GrblViewModel, IsDesignTimeCreatable=True}"
             Loaded="RenderControl_Loaded"
             d:DesignHeight="800" d:DesignWidth="1080">
    <UserControl.Resources>
        <controls:PositionToStringConverter x:Key="PositionConverter" />
        <controls:FeedSpeedToStringConverter x:Key="FeedSpeedConverter" />
        <controls:HomedStateToBooleanConverter x:Key="IsHomed" />
        <controls:LogicalNotConverter x:Key="IsNotRunningConverter" />
        <controls:BoolToVisibleConverter x:Key="IsVisibleConverter" />
        <controls:ToolWithOffsetStringConverter x:Key="ToolWithOffsetStringConverter" />
        <controls:LogicalNotConverter x:Key="IsNotVisibleConverter">
            <controls:LogicalNotConverter.FinalConverter>
                <controls:BoolToVisibleConverter />
            </controls:LogicalNotConverter.FinalConverter>
        </controls:LogicalNotConverter>
        <Style x:Key="JobButton" TargetType="Button">
            <Setter Property="Width" Value="125"/>
            <Setter Property="Height" Value="22"/>
        </Style>
        <Style x:Key="Flag" TargetType="ToggleButton">
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ToggleButton">
                                <Image Source="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsChecked" Value="False">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ToggleButton">
                                <Image Source="{Binding Path=Tag, RelativeSource={RelativeSource TemplatedParent}}"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Width" Value="22"/>
            <Setter Property="Height" Value="22"/>
            <Setter Property="Margin" Value="3,0,0,0"/>
        </Style>
        <Style x:Key="BtnImage" TargetType="Button">
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="True">
                    <Setter Property="Opacity" Value="1"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.5"/>
                </Trigger>
            </Style.Triggers>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Width" Value="22"/>
            <Setter Property="Height" Value="22"/>
            <Setter Property="Margin" Value="3,0,0,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Image Source="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <DockPanel HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
        <StackPanel Orientation="Horizontal" DockPanel.Dock="Bottom" HorizontalAlignment="Right">
            <ComboBox IsEnabled="{Binding Path=IsJobRunning, Converter={StaticResource IsNotRunningConverter}}" Visibility="{Binding Path=LatheModeEnabled, Converter={StaticResource IsNotVisibleConverter}}" ItemsSource="{Binding Path=MachineView.RenderModes, RelativeSource={RelativeSource AncestorType=UserControl}}" DisplayMemberPath="Value" SelectedValuePath="Key" SelectedValue="{Binding Path=MachineView.RenderMode, RelativeSource={RelativeSource AncestorType=UserControl}, Mode=TwoWay}" Width="50"/>
            <ComboBox Margin="3,0,0,0" ItemsSource="{Binding Path=MachineView.ToolModes, RelativeSource={RelativeSource AncestorType=UserControl}}" DisplayMemberPath="Value" SelectedValuePath="Key" SelectedValue="{Binding Path=MachineView.ToolMode, RelativeSource={RelativeSource AncestorType=UserControl}, Mode=TwoWay}" Width="80"/>
            <Button x:Uid="resetView" Content="\Resources\Render\ResetView.png" Style="{StaticResource BtnImage}" Click="ResetView_Click" ToolTip="Reset view (Ctrl+V)"/>
            <Button x:Uid="restoreView" Content="\Resources\Render\RestoreView.png" Style="{StaticResource BtnImage}" IsEnabled="{Binding Path=MachineView.CanRestoreView, RelativeSource={RelativeSource AncestorType=UserControl}}" Click="RestoreView_Click" ToolTip="Restore view (Ctrl+R)"/>
            <ToggleButton x:Uid="showGrid" Content="\Resources\Render\GridOn.png" Tag="\Resources\Render\GridOff.png" Style="{StaticResource Flag}" IsChecked="{Binding Path=MachineView.ShowGrid, RelativeSource={RelativeSource AncestorType=UserControl}, Mode=TwoWay}" ToolTip="Toggle grid visibility (Ctrl+G)"/>
            <ToggleButton x:Uid="showJobEnvelope" Content="\Resources\Render\JobBoxOn.png" Tag="\Resources\Render\JobBoxOff.png" Style="{StaticResource Flag}" IsChecked="{Binding Path=MachineView.ShowJobEnvelope, RelativeSource={RelativeSource AncestorType=UserControl}, Mode=TwoWay}" ToolTip="Toggle job bounds visibility (Ctrl+J)"/>
            <ToggleButton x:Uid="showWorkEnvelope" Content="\Resources\Render\WorkBoxOn.png" Tag="\Resources\Render\WorkBoxOff.png" Style="{StaticResource Flag}" IsChecked="{Binding Path=MachineView.ShowWorkEnvelope, RelativeSource={RelativeSource AncestorType=UserControl}, Mode=TwoWay}" IsEnabled="{Binding Path=HomedState, Mode=OneWay, Converter={StaticResource IsHomed}}" ToolTip="Toggle machine work envelope visibility (Ctrl+W)"/>
            <ToggleButton x:Uid="showXYZMarkers" Content="\Resources\Render\XYZOn.png" Tag="\Resources\Render\XYZOff.png" Style="{StaticResource Flag}" IsChecked="{Binding Path=MachineView.ShowAxes, RelativeSource={RelativeSource AncestorType=UserControl}, Mode=TwoWay}" ToolTip="Toggle axes visibility"/>
            <Button x:Uid="saveView" Content="\Resources\Render\SaveView.png" Style="{StaticResource BtnImage}" IsEnabled="{Binding Path=IsFileLoaded}" Click="SaveView_Click" ToolTip="Save view"/>
        </StackPanel>
        <Grid DockPanel.Dock="Top">
            <render:Renderer x:Name="gcodeView"/>
           
            <StackPanel Visibility="{Binding RenderVM.ShowOverlay, Converter={StaticResource BooleanToVisibilityConverter}}" 
                        Orientation="Vertical"  HorizontalAlignment="left" VerticalAlignment="Top" Margin="5,5">
                <TextBlock Foreground="{Binding RenderVM.ForegroundColor}"  HorizontalAlignment="Left" FontSize="20" Margin="3,0,0,0">
                <TextBlock.Text>
                    <MultiBinding Converter="{StaticResource PositionConverter}">
                        <Binding Path="Position" Mode="OneWay"/>
                        <Binding Path="Format" Mode="OneWay"/>
                    </MultiBinding>
                </TextBlock.Text>
            </TextBlock>
            <TextBlock Foreground="{Binding RenderVM.ForegroundColor}" HorizontalAlignment="Left" FontSize="18" Margin="3,0,3,0">
                <TextBlock.Text>
                    <MultiBinding Converter="{StaticResource FeedSpeedConverter}">
                        <Binding Path="FeedRate" Mode="OneWay"/>
                            <Binding Path="ProgrammedRPM" Mode="OneWay"/>
                    </MultiBinding>
                </TextBlock.Text>
            </TextBlock>
            </StackPanel>
            <TextBlock HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="22" Margin="3,50,0,0" Foreground="Red" Opacity=".9"  
                       Visibility="{Binding Path=IsTloReferenceSet, Converter={StaticResource BooleanToVisibilityConverter}}">
                <TextBlock.Text>
                    <MultiBinding Converter="{StaticResource ToolWithOffsetStringConverter}">
                        <Binding Path="Tool" StringFormat="Tool:{0}" Mode="OneWay"/>
                        <Binding Path="ToolOffset.Z"  StringFormat="Offset:{0}"  Mode="OneWay"/>
                    </MultiBinding>
                </TextBlock.Text>
            </TextBlock>
            <StackPanel VerticalAlignment="Top" HorizontalAlignment="Center" Margin="5,5"  >
                <Label MouseDoubleClick="Control_OnMouseDoubleClick"  Content="Tool Change" 
                       Visibility="{Binding ToolChangeInProgress,  Converter={StaticResource BooleanToVisibilityConverter}}" FontSize="100" 
                       HorizontalAlignment="Center" VerticalAlignment="Top" Foreground="Red" Opacity=".5"></Label>
                <Label Content="MPG ACTIVE"  HorizontalAlignment="Center" VerticalAlignment="Top" Foreground="Red" Opacity=".5"
                       Visibility="{Binding IsMPGActive,  Converter={StaticResource BooleanToVisibilityConverter}}" FontSize="100"/>
            </StackPanel>
            <Grid  VerticalAlignment="Top"  Margin="0,5,5,5"  HorizontalAlignment="Right" >
                <Grid.RowDefinitions>
                    <RowDefinition Height="50"></RowDefinition>
                    <RowDefinition Height="50"></RowDefinition>
                    <RowDefinition Height="50"></RowDefinition>
                    <RowDefinition Height="50"></RowDefinition>
                </Grid.RowDefinitions>
                <Button x:Name="StartButton" Grid.Row="0" FontSize="20" IsEnabled="{Binding RenderVM.EnableStart}" Command="{Binding RenderVM.StartJobCommand}" Height="40" MaxWidth="150"  Margin="5,0" Content="Start"></Button>
                <Button x:Name="HoldButton" Grid.Row="1" FontSize="20" IsEnabled="{Binding RenderVM.EnableHold}" Command="{Binding RenderVM.HoldJobCommand}" Height="40" MaxWidth="150"    Margin="5,0" Content="Feed Hold" ></Button>
                <Button x:Name="StopButton" Grid.Row="2" FontSize="20" IsEnabled="{Binding RenderVM.EnableStop}" Command="{Binding RenderVM.StopJobCommand}" Height="40"  MaxWidth="150" Margin="5,0"  Content="Stop" ></Button>
                <Button x:Name="RewindButton" Grid.Row="3" FontSize="20" IsEnabled="{Binding RenderVM.EnableRewind}" Command="{Binding RenderVM.RewindJobCommand}" Height="40" MaxWidth="150"  Margin="5,0" Content="Rewind" ></Button>
            </Grid>

        </Grid>
    </DockPanel>
</UserControl>
